<?php

namespace app\webplatform\controller;

use app\promote\model\PromoteapplyModel;
use think\Controller;
use app\webplatform\logic\ApiLogic;

class GameApiController extends Controller
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if($this->request->isPost()){
            $request = $this->request->param();
            if(empty($request['timestamp']) || empty($request['sign']) || empty($request['platform'])){
                $this->set_message(0,'参数异常');
            }
            // 查询平台是否存在
            $map['promote_account'] = $request['platform'];
            $map['status'] = 1;
            $platformInfo = get_platform_entity($map,'api_key');
            if(empty($platformInfo)){
                $this->set_message(0,'平台不存在或已关闭');
            }
            // 时间戳验证
            if(abs($request['timestamp']- time()) > 60){
                $this->set_message(0,'请求超时');
            }
            // 验签
            $signStr = md5($request['platform'] . $request['timestamp'] . $platformInfo['api_key']);
            if($signStr !== $request['sign']){
                $this->set_message(0,'验签失败');
            }
        }else{
            $this->set_message(0,'非法请求');
        }
    }

    /**
     * 渠道平台可导入游戏数量
     *
     * @author: Juncl
     * @time: 2021/08/19 16:43
     */
    public function selectGames()
    {
         $param = $this->request->param();
         $map['promote_account'] = $param['platform'];
         $promote_id = get_platform_entity($map,'promote_id')['promote_id'];
         $game_ids = $param['game_ids'];
         if(!$promote_id){
             $this->set_message(0,'平台不存在',[]);
         }
         $ApiLogic = new ApiLogic();
         $result = $ApiLogic->selectGames($promote_id,$game_ids);
         $data['count'] = $result;
         $this->set_message(200,'成功',$data);

    }

    /**
     * 一键导入游戏返回接口
     *
     * @author: Juncl
     * @time: 2021/08/21 9:13
     */
    public function importGames()
    {
        $param = $this->request->param();
        $map['promote_account'] = $param['platform'];
        $game_ids = $param['game_ids'];
        $promote_id = get_platform_entity($map,'promote_id')['promote_id'];
        if(!$promote_id){
            $this->set_message(0,'平台不存在',[]);
        }
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->importGame($promote_id,$game_ids);
        $this->set_message(200,'成功',$result);
    }

    /**
     * 导入区服
     *
     * @author: Juncl
     * @time: 2021/08/23 13:46
     */
    public function importServers()
    {
        $param = $this->request->param();
        $map['promote_account'] = $param['platform'];
        $server_ids = $param['server_ids'];
        $game_id = $param['game_id'];
        $promote_id = get_platform_entity($map,'promote_id')['promote_id'];
        if(!$promote_id){
            $this->set_message(0,'平台不存在',[]);
        }
        if(!$game_id){
            $this->set_message(0,'游戏ID不能为空',[]);
        }
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->importServer($game_id,$server_ids);
        $this->set_message(200,'成功',$result);
    }

    /**
     * 导入礼包
     *
     * @author: Juncl
     * @time: 2021/08/23 13:46
     */
    public function importGifts()
    {
        $param = $this->request->param();
        $map['promote_account'] = $param['platform'];
        $platform_id = get_platform_entity($map,'id')['id'];
        $gift_ids = $param['gift_ids'];
        $game_id = $param['game_id'];
        if(!$platform_id){
            $this->set_message(0,'平台不存在',[]);
        }
        if(!$game_id){
            $this->set_message(0,'游戏ID不能为空',[]);
        }
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->importGift($platform_id,$game_id,$gift_ids);
        $this->set_message(200,'成功',$result);
    }

    /**
     * 更新游戏原包
     *
     * @author: Juncl
     * @time: 2021/08/24 9:50
     */
    public function importSource()
    {
        $param = $this->request->param();
        $map['promote_account'] = $param['platform'];
        $promote_id = get_platform_entity($map,'promote_id')['promote_id'];
        $game_id = $param['game_id'];
        if(!$promote_id){
            $this->set_message(0,'平台不存在',[]);
        }
        if(!$game_id){
            $this->set_message(0,'游戏ID不能为空',[]);
        }
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->importSource($promote_id,$game_id);
        $this->set_message(200,'成功',$result);
    }

    /**
     * 导入订单信息
     *
     * @author: Juncl
     * @time: 2021/08/31 15:37
     */
    public function importOrders()
    {
        $param = $this->request->param();
        if(empty($param['last_pay_time'])){
            $this->set_message(0,'订单时间不能为空',[]);
        }
        $map['promote_account'] = $param['platform'];
        $platformInfo = get_platform_entity($map,'id,promote_id');
        if(!$platformInfo){
            $this->set_message(0,'平台不存在',[]);
        }
        $data['promote_id'] = $platformInfo['promote_id'];
        $data['last_pay_time'] = $param['last_pay_time'];
        $data['limit'] = $param['limit']?:10;
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->importOrders($data);
        if(empty($result)){
            $result = [];
        }
        $this->set_message(200,'成功',$result);
    }

    /**
     * 返回对应订单得支付状态
     *
     * @author: Juncl
     * @time: 2021/08/31 16:24
     */
    public function updatePayStatus()
    {
        $param = $this->request->param();
        if(empty($param['trade_no'])){
            $this->set_message(0,'订单号不能为空',[]);
        }
        $map['promote_account'] = $param['platform'];
        $platformInfo = get_platform_entity($map,'id,promote_id');
        if(!$platformInfo){
            $this->set_message(0,'平台不存在',[]);
        }
        $tradeNo = $param['trade_no'];
        $ApiLogic = new ApiLogic();
        $result = $ApiLogic->updatePayStatus($tradeNo);
        $this->set_message(200,'成功',$result);
    }

    /**
     * 接口返回
     *
     * @param int $status
     * @param string $msg
     * @param array $data
     * @author: Juncl
     * @time: 2021/08/19 15:47
     */
    protected function set_message($status=0, $msg='', $data=[])
    {
        $return = array(
            'status' => $status,
            'msg'    => $msg,
            'data'   => $data
        );
        echo json_encode($return);exit;
    }
}